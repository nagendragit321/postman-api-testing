{
	"info": {
		"_postman_id": "f832bd96-1bfe-49b7-86ea-707bf79fb914",
		"name": "Sample-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43120995"
	},
	"item": [
		{
			"name": "https://reqres.in/",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "\nhttps://reqres.in/api/users",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users?page=2",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users/2",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"leader3\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users/2",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users/2",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users/2",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://postman-echo.com/time/now",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/now",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"now"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://automationexercise.com/api/productsList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Presence of required fields in the response schema\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.products).to.be.an('array');",
							"    ",
							"    responseData.products.forEach(function(product) {",
							"        pm.expect(product).to.have.property('id');",
							"        pm.expect(product).to.have.property('name');",
							"        pm.expect(product).to.have.property('price');",
							"        pm.expect(product).to.have.property('brand');",
							"        pm.expect(product).to.have.property('category');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Name is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.products).to.be.an('array');",
							"    responseData.products.forEach(function(product) {",
							"        pm.expect(product.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
							"    });",
							"});",
							"",
							"pm.test(\"Price is in a valid format\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.products).to.be.an('array');",
							"    responseData.products.forEach(function(product) {",
							"        pm.expect(product.price).to.match(/^Rs\\.\\s?\\d+(\\.\\d{1,2})?$/, \"Price should be in a valid format\");",
							"    });",
							"});",
							"",
							"pm.test(\"Brand is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.products).to.be.an('array');",
							"    responseData.products.forEach(function(product) {",
							"        pm.expect(product.brand).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Brand should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Category object contains expected sub-fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.have.property('products').that.is.an('array');",
							"    ",
							"    responseData.products.forEach(function(product) {",
							"        pm.expect(product).to.have.property('category').that.is.an('object');",
							"        pm.expect(product.category).to.have.property('usertype').that.is.an('object');",
							"        pm.expect(product.category).to.have.property('category').that.is.a('string');",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automationexercise.com/api/productsList",
					"protocol": "https",
					"host": [
						"automationexercise",
						"com"
					],
					"path": [
						"api",
						"productsList"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://parabank.parasoft.com/parabank/index.htm;jsessionid=ADFC7CD7220CF87D13852F24BA0BF770",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://parabank.parasoft.com/parabank/index.htm;jsessionid=ADFC7CD7220CF87D13852F24BA0BF770",
					"protocol": "https",
					"host": [
						"parabank",
						"parasoft",
						"com"
					],
					"path": [
						"parabank",
						"index.htm;jsessionid=ADFC7CD7220CF87D13852F24BA0BF770"
					]
				}
			},
			"response": []
		}
	]
}